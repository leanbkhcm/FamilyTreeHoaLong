datasource db {
  //provider = "sqlite"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}






model Person {
  personId    				Int     	@id @default(autoincrement())
  
  fatherId    				Int
  father      				Person?		@relation("FatherRelationShip", fields: [fatherId], references: [personId])
  fatherDefined 			Person?   	@relation("FatherRelationShip")
  
  motherId    				Int
  mother      				Person?		@relation("MotherRelationShip", fields: [motherId], references: [personId])
  motherDefined 			Person?   	@relation("MotherRelationShip")
  
  @@unique([fatherId, motherId])
  
  name  	  				String
  husbandMarriage 			Marriages[]	 @relation("HusbandRelationShip")
  wifeMarriage 				Marriages[]	 @relation("WifeRelationShip")
  
  association1 				Association[]	 @relation("Person1RelationShip")
  association2 				Association[]	 @relation("Person2RelationShip")
  
  
  //birthDate	  DateTime?
  //email 	  String?  @unique
}

  
  //marriageDate	  DateTime?









model Marriages {
  marriageId   	Int     	@id @default(autoincrement())
	
  husbandId    	Int			
  husband      	 Person?		@relation("HusbandRelationShip", fields: [husbandId], references: [personId])
  
  wifeId    	Int			
  wife      	Person?		@relation("WifeRelationShip", fields: [wifeId], references: [personId])
  
  notes			String
  //birthDate	  DateTime?
}



model Association { //anh chi em cung cha khac me to setup relationship
  relationshipId   	Int     	@id @default(autoincrement())
	
  persion1Id    	Int			
  persion1      	Person?		@relation("Person1RelationShip", fields: [persion1Id], references: [personId])
  
  persion2Id    	Int			
  persion2      	Person?		@relation("Person2RelationShip", fields: [persion2Id], references: [personId])
  
  notes			String
  //birthDate	  DateTime?
}
